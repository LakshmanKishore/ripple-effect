/* Basic Setup */
* {
  box-sizing: border-box;
}

:root {
  --neon-blue: #00e5ff;
  --neon-pink: #ff33ff;
  --neon-green: #00ff95;
  --dark-purple: #2a0f4a;
  --bg-color: #10081c;
  --border-color: rgba(0, 229, 255, 0.4);
}

body, html {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100vh; /* Use viewport height */
  display: flex;
  flex-direction: column;
  justify-content: flex-start; /* Align content to the top */
  align-items: center;
  overflow: hidden;
  background-color: var(--bg-color);
  background-image: radial-gradient(circle at top left, var(--dark-purple) 0%, transparent 50%),
    radial-gradient(circle at bottom right, var(--dark-purple) 0%, transparent 60%);
  font-family: sans-serif;
  color: white;
}

main {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
}

/* Header */
header {
  position: relative; /* Establish a positioning context */
  width: 100%; /* Ensure header spans the full width */
  padding: 0;
  text-align: center;
  margin-bottom: 1vh; /* Use viewport height for spacing */
}

.game-title {
  font-size: 1.8rem;
  font-weight: 700;
  color: var(--neon-blue);
  text-shadow: 0 0 5px var(--neon-blue), 0 0 18px var(--neon-blue), 0 0 35px var(--neon-pink);
  animation: pulse-glow 2s infinite alternate;
}

@keyframes pulse-glow {
  from {
    text-shadow: 0 0 5px var(--neon-blue), 0 0 18px var(--neon-blue), 0 0 35px var(--neon-pink);
  }
  to {
    text-shadow: 0 0 8px var(--neon-blue), 0 0 25px var(--neon-blue), 0 0 50px var(--neon-pink);
  }
}

/* Turn Indicator */
#turn-indicator-container {
  perspective: 800px;
  margin-bottom: 1vh; /* Use viewport height for spacing */
}

.turn-indicator {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 6px 14px;
  border-radius: 8px;
  background-color: rgba(36, 15, 68, 0.8);
  border: 1px solid var(--player-color, var(--neon-blue));
  box-shadow: 0 0 12px var(--player-color, var(--neon-blue));
  font-size: 1em;
  font-weight: bold;
  color: var(--player-color, white);
}

.turn-indicator img {
  width: 28px;
  height: 28px;
  border-radius: 50%;
  border: 1px solid var(--player-color, white);
}

/* Game Board */
#board {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 4px;
  /* Let the board size itself based on the smaller of viewport width or height */
  width: min(80vw, 48vh); /* 48vh is derived from 80vw and the board's 10:6 aspect ratio */
  max-width: 400px; /* Add a max-width for large screens */

  position: relative;
  background-color: transparent;
  border: none;
  border-radius: 10px;
  padding: 5px;
}

.cell {
  background-color: transparent;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: background-color 0.3s, border-color 0.3s;
  position: relative;
  aspect-ratio: 1 / 1; /* Ensure cells are square */
}

.cell:hover {
  background-color: rgba(0, 229, 255, 0.15);
  border-color: var(--neon-blue);
}

.nanobot-container {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.nanobot {
  width: 90%;
  height: 90%;
  max-width: 22px;
  max-height: 22px;
  position: absolute;
  filter: drop-shadow(0 0 4px var(--player-color));
}

.nanobot-avatar,
.nanobot-frame {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.nanobot-avatar {
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  mask-image: var(--nanobot-mask);
  mask-size: contain;
  mask-repeat: no-repeat;
  mask-position: center;
  -webkit-mask-image: var(--nanobot-mask);
  -webkit-mask-size: contain;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-position: center;
}

.nanobot-frame {
  background-image: var(--nanobot-frame);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.nanobot-count-1 .nanobot:nth-child(1) { top: 50%; left: 50%; transform: translate(-50%, -50%); }

.nanobot-count-2 .nanobot:nth-child(1) { top: 50%; left: calc(50% - 8px); transform: translate(-50%, -50%); }
.nanobot-count-2 .nanobot:nth-child(2) { top: 50%; left: calc(50% + 8px); transform: translate(-50%, -50%); }

.nanobot-count-3 .nanobot:nth-child(1) { top: calc(50% - 8px); left: 50%; transform: translate(-50%, -50%); }
.nanobot-count-3 .nanobot:nth-child(2) { top: calc(50% + 8px); left: calc(50% - 8px); transform: translate(-50%, -50%); }
.nanobot-count-3 .nanobot:nth-child(3) { top: calc(50% + 8px); left: calc(50% + 8px); transform: translate(-50%, -50%); }

/* Overload State */
.overloaded .nanobot {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation: pulse-overload 0.5s infinite alternate;
}

@keyframes pulse-overload {
    from {
        transform: translate(-50%, -50%) scale(1);
        filter: drop-shadow(0 0 4px var(--player-color)) brightness(1);
    }
    to {
        transform: translate(-50%, -50%) scale(1.2);
        filter: drop-shadow(0 0 10px var(--player-color)) brightness(1.5);
    }
}

@keyframes pop-in {
  from { transform: translate(-50%, -50%) scale(0); opacity: 0; }
  to { transform: translate(-50%, -50%) scale(1); opacity: 1; }
}

/* Winner Overlay */
.winner-overlay {
    position: absolute;
    top: 0; left: 0; right: 0; bottom: 0;
    background-color: rgba(13, 5, 20, 0.9);
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    border-radius: 10px;
}

.winner-overlay h2 {
    color: var(--winner-color);
    text-shadow: 0 0 15px var(--winner-color), 0 0 30px var(--winner-color);
    font-size: 2.5rem;
    animation: winner-pulse 1.5s infinite alternate;
}

@keyframes winner-pulse {
    from { transform: scale(1); }
    to { transform: scale(1.05); }
}

/* Dim Screen for non-active players / AI turn */
body.dim-screen {
  opacity: 0.7;
}

body.dim-screen #board {
  opacity: 0.8; /* Further dim the board */
  pointer-events: none; /* Disable interactions on the board */
}

body.dim-screen .cell {
  cursor: not-allowed;
}

body.dim-screen .help-button,
body.dim-screen .close-button {
  pointer-events: auto; /* Re-enable pointer events for the help button and close button */
}
.ai-turn #board {
  /* This rule can be removed if dim-screen handles all cases */
}

.ai-turn .cell {
  /* This rule can be removed if dim-screen handles all cases */
}

/* Responsive Adjustments */
@media (min-width: 420px) {
    .game-title {
        font-size: 2.2rem;
    }
}

/* How to Play Button */
.help-button {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: rgba(0, 229, 255, 0.2);
  border: 1px solid var(--neon-blue);
  border-radius: 50%;
  width: 30px;
  height: 30px;
  font-size: 1.2em;
  color: var(--neon-blue);
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  transition: background-color 0.3s, box-shadow 0.3s;
}

.help-button:hover {
  background-color: rgba(0, 229, 255, 0.4);
  box-shadow: 0 0 10px var(--neon-blue);
}

/* Modal Styles */
.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1001; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgba(0, 0, 0, 0.8); /* Black w/ opacity */
  backdrop-filter: blur(5px); /* Frosted glass effect */
  -webkit-backdrop-filter: blur(5px); /* Safari support */
  justify-content: center;
}

.modal-content {
  background-color: var(--bg-color);
  margin: auto;
  padding: 20px;
  border: 1px solid var(--neon-blue);
  border-radius: 10px;
  width: 80%;
  max-width: 500px;
  box-shadow: 0 0 20px var(--neon-blue);
  position: relative;
  color: white;
  text-align: left;
}

.modal-content h2 {
  color: var(--neon-green);
  text-align: center;
  margin-bottom: 15px;
  font-size: 1.8em;
}

.modal-content p, .modal-content li {
  font-size: 0.95em;
  line-height: 1.5;
  margin-bottom: 10px;
}

.modal-content ul {
  list-style-type: disc;
  margin-left: 20px;
  margin-bottom: 10px;
}

.close-button {
  color: #aaa;
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 28px;
  font-weight: bold;
  cursor: pointer;
}

.close-button:hover,
.close-button:focus {
  color: white;
  text-decoration: none;
  cursor: pointer;
}